import Head from 'next/head'
import { Header, Hero, Row } from '../companets' // hamma companentlani index ga yozin indexni chaqirib olsak osonroq
import { useEffect } from 'react';
import { API_REQUEST } from '../services/api.service';
import { getServers } from 'dns';
import { GetServerSideProps } from 'next';
import { IMovie } from '../interfaces/app.interface';

export default function Home({trending, topReated, tvTopReated, popular,documentary,comedy,family,history }: HomeProps): JSX.Element {
  // useEffect(() => {
  //   fetch(API_REQUEST.trending)
  //   .then(res => res.json())
  //   .then(data => console.log(data))
  // }, [])

  return (
    <div className='relative min-h-screen '>
      <Head>
        <title>Home - Jahon</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo.svg" />
      </Head>
      <Header/>
      <main className='relative pl-4 pb-24 lg:space-y-24 lg:pl-16'>
       {/* Hero */}
       <Hero trending={trending}/>
       <section>
        {/* Row */}
       <Row title='Top Rated' movies={topReated} />
        {/* BigRow */}
       <Row title='Featured Tv Shows' movies={tvTopReated} isBig={true}/>
        {/* Row */}
       <Row title='Popular' movies={popular.reverse()} />
        {/* BigRow */}
       <Row title='documentary' movies={documentary}/>
       <Row title='Comedy' movies={comedy.reverse()} isBig={true}/>
       <Row title='Family' movies={family}/>
       <Row title='History' movies={history.reverse()}/>
       </section>
      </main>
    </div>
  )
}

// SSR yozish
export const getServerSideProps: GetServerSideProps<HomeProps> = async () => {
  const trending = await fetch(API_REQUEST.trending).then(res => res.json());
  const topReated = await fetch(API_REQUEST.top_reted).then(res => res.json());
  const tvTopReated = await fetch(API_REQUEST.tv_top_reted).then(res => res.json());
  const popular = await fetch(API_REQUEST.popular).then(res => res.json());
  const documentary = await fetch(API_REQUEST.documentary).then(res => res.json());
  const comedy = await fetch(API_REQUEST.comedy).then(res => res.json());
  const family = await fetch(API_REQUEST.family).then(res => res.json());
  const history = await fetch(API_REQUEST.history).then(res => res.json());

  // kirgandan poshqa page ga o'tib ketadi
  // if(trending.results.length) {
  //   return{
  //     notFound: true, // error 404 ga yuboradi
  //   }
  // }

  return{
    props: {
      trending: trending.results,
      topReated: topReated.results,
      tvTopReated: tvTopReated.results,
      popular: popular.results,
      documentary: documentary.results,
      comedy: comedy.results,
      family: family.results,
      history: history.results,
    }
  }
}
interface HomeProps {
  trending: IMovie[];
  topReated: IMovie[]
  tvTopReated: IMovie[]
  popular: IMovie[]
  documentary: IMovie[]
  comedy: IMovie[]
  family: IMovie[]
  history: IMovie[]
}